const fs = require('fs')const path = require('path')const url = require('url')const git = require('simple-git/promise');const config = require('../config.json').repoconst couchdbConf = require('../config.json').couchdblet nano = require('nano')('http://' + couchdbConf.login + ':' + couchdbConf.password + '@' + couchdbConf.host + ':' + couchdbConf.port + '');let repoDir = config.folderlet repository = config.source;let remote = config.source;function checkRepos() {    if (!fs.existsSync(repoDir)) {        git().clone(remote).then(() => console.log('finished')).catch((err) => console.error('failed: ', err));    }}function _getFile(dataName) {    var temp = nano.use(dataName);    var tempObj = {}    var key = dataName;    tempObj[key] = [];    temp.list(function(err, body) {        if (!err) {            body.rows.forEach(function(doc) {                tempObj[key].push(doc);            });            fs.writeFile(repoDir + dataName + ".json", JSON.stringify(tempObj), (err) => {                if (err) throw err                //console.log('The file has been saved!');            });        }    });}function initialiseRepo(git) {    return git.init()        .then(() => git.addRemote('origin', remote))}function _commitChanges() {    require('simple-git')('./backuptest/')        .init()        .add('./*')        .commit(Date.now())        .addRemote('master', 'https://github.com/DmitryVengerov/backuptest.git')        .push(['-u', 'origin', 'master'], () => console.log('done'));}function _getAllBases() {    nano.db.list(function(err, body) {        body.forEach(function(db) {            _getFile(db);        });    });}module.exports = function(db) {    checkRepos();    _getAllBases();    _commitChanges();}